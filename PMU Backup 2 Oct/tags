!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(PROGRAM)	Makefile	/^$(PROGRAM): $(OBJECTS)$/;"	t
%.o	Makefile	/^%.o: %.c$/;"	t
ANUNIT_EACH	CfgGuiFunctions.c	/^#define ANUNIT_EACH /;"	d	file:
AnalogChWin	CfgGuiFunctions.h	/^GtkWidget *AnalogChWin;$/;"	v	typeref:typename:GtkWidget *
BACKLOG	ServerFunction.h	/^#define BACKLOG /;"	d
B_copy	function.c	/^void B_copy(unsigned char main[], unsigned char tmp[], int ind, int n)$/;"	f	typeref:typename:void
CC	Makefile	/^CC = gcc$/;"	m
CCOptionWin	CfgGuiFunctions.h	/^GtkWidget *CCOptionWin;$/;"	v	typeref:typename:GtkWidget *
CCWin	CfgGuiFunctions.h	/^GtkWidget *CCWin;$/;"	v	typeref:typename:GtkWidget *
CCWin	PmuGui.h	/^GtkWidget *CCWin, *setup_display_window;	$/;"	v	typeref:typename:GtkWidget *
CFLAGS	Makefile	/^CFLAGS=`pkg-config --cflags --cflags gtk+-3.0` -DGTK_DISABLE_SINGLE_INCLUDES -DGDK_DISABLE_DEPRE/;"	m
CH_GET_OBJECT	PmuGui.h	/^#define CH_GET_OBJECT(/;"	d
CH_GET_WIDGET	PmuGui.h	/^#define CH_GET_WIDGET(/;"	d
CLEAN_OBJECTS	Makefile	/^CLEAN_OBJECTS = PmuGui.o function.o ServerFunction.o CfgFunction.o CfgGuiFunctions.o  pmu.xml$/;"	m
COL_PROP	PmuGui.h	/^  COL_PROP = 0,$/;"	e	enum:__anon2d03f9320103
COL_VAL	PmuGui.h	/^  COL_VAL,$/;"	e	enum:__anon2d03f9320103
COMPILE	Makefile	/^COMPILE = $(CC) $/;"	m
CREATE_DIR	Makefile	/^CREATE_DIR = $(INSTALL_PREFIX)\/share\/$/;"	m
Change_pmu_configuration	CfgGuiFunctions.c	/^void Change_pmu_configuration(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
ConfigurationChange	CfgFunction.h	/^struct ConfigurationChange $/;"	s
ConfigurationFrame	CfgFunction.h	/^struct ConfigurationFrame $/;"	s
DATA_thread	ServerFunction.h	/^pthread_t UDP_thread,TCP_thread,MUL_thread,DATA_thread;$/;"	v	typeref:typename:pthread_t
DESKTOP_DIR	Makefile	/^DESKTOP_DIR = ${HOME}\/.local\/share\/applications$/;"	m
DRSYNC_cfg	ServerFunction.h	/^unsigned char DRSYNC_cfg[3];$/;"	v	typeref:typename:unsigned char[3]
E_button	ShearedMemoryStructure.h	/^	GtkWidget *E_button;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
FILE2	Makefile	/^FILE2 = PmuLogo.png$/;"	m
FILE3	Makefile	/^FILE3 = PSLab.PNG$/;"	m
FILE4	Makefile	/^FILE4 = PmuLogo1.png$/;"	m
FILE5	Makefile	/^FILE5 = logo.png$/;"	m
FILE6	Makefile	/^FILE6 = PMU.desktop$/;"	m
FILE7	Makefile	/^FILE7 = runPMU$/;"	m
FILE8	Makefile	/^FILE8 = data.csv$/;"	m
GW	pmu.c	/^		#define GW(/;"	d	file:
H2S	function.c	/^void H2S(char a[], unsigned char temp_6[])$/;"	f	typeref:typename:void
HdrFrm	CfgGuiFunctions.h	/^GtkWidget *phtext, *angtext, *HdrFrm;$/;"	v	typeref:typename:GtkWidget ***
ICON_DIR	Makefile	/^ICON_DIR = ${HOME}\/.local\/share\/icons$/;"	m
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_PREFIX	Makefile	/^INSTALL_PREFIX = ${HOME}\/iPDC$/;"	m
LDLIBS	Makefile	/^LDLIBS=`pkg-config --cflags --libs gtk+-3.0`$/;"	m
LIBS	Makefile	/^LIBS = -lpthread -lm -lrt$/;"	m
MAX_STRING_SIZE	CfgFunction.c	/^#define MAX_STRING_SIZE /;"	d	file:
MAX_STRING_SIZE	PmuGui.c	/^#define MAX_STRING_SIZE /;"	d	file:
MAX_STRING_SIZE	ServerFunction.h	/^#define MAX_STRING_SIZE /;"	d
MUL_PMU	ServerFunction.c	/^void* MUL_PMU()$/;"	f	typeref:typename:void *
MUL_sockfd	ServerFunction.h	/^int UDP_sockfd,TCP_sockfd,MUL_sockfd; \/* socket descriptors *\/$/;"	v	typeref:typename:int
MUL_thread	ServerFunction.h	/^pthread_t UDP_thread,TCP_thread,MUL_thread,DATA_thread;$/;"	v	typeref:typename:pthread_t
MulPort	ShearedMemoryStructure.h	/^    int MulPort;                \/* User given port for Multicasting *\/$/;"	m	struct:P_id	typeref:typename:int
Mulip	ShearedMemoryStructure.h	/^    char Mulip[20];             \/* Useg given Group IP for Multicasting *\/$/;"	m	struct:P_id	typeref:typename:char[20]
MyKey	ShearedMemoryStructure.h	/^key_t MyKey;$/;"	v	typeref:typename:key_t
NUM_COLS	PmuGui.h	/^  NUM_COLS$/;"	e	enum:__anon2d03f9320103
OBJECTS	Makefile	/^OBJECTS =  pmu.c PmuGui.o function.o ServerFunction.o CfgFunction.o CfgGuiFunctions.o$/;"	m
PDC_Details	ServerFunction.h	/^struct PDC_Details {$/;"	s
PDC_MATCH	ServerFunction.c	/^void PDC_MATCH(int proto, int newfd)$/;"	f	typeref:typename:void
PDCfirst	ServerFunction.h	/^}*PDCfirst,*PDClast,*mul_pdc;$/;"	v	typeref:struct:PDC_Details *
PDClast	ServerFunction.h	/^}*PDCfirst,*PDClast,*mul_pdc;$/;"	v	typeref:struct:PDC_Details **
PHUNIT_CURRENT	CfgGuiFunctions.c	/^#define PHUNIT_CURRENT /;"	d	file:
PHUNIT_VOLTAGE	CfgGuiFunctions.c	/^#define PHUNIT_VOLTAGE /;"	d	file:
PMU_mulip	CfgFunction.h	/^char *hdr_frame, *markup1, PMU_mulip[20];$/;"	v	typeref:typename:char ** [20]
PMU_mulport	CfgFunction.h	/^int  PMU_tport, PMU_mulport;$/;"	v	typeref:typename:int
PMU_tport	CfgFunction.h	/^int  PMU_tport, PMU_mulport;$/;"	v	typeref:typename:int
PMU_uport	CfgFunction.h	/^int  PMU_uport;$/;"	v	typeref:typename:int
PROGRAM	Makefile	/^PROGRAM = PMU$/;"	m
P_id	ShearedMemoryStructure.h	/^struct P_id {$/;"	s
PhasorChWin	CfgGuiFunctions.h	/^GtkWidget *PhasorChWin;$/;"	v	typeref:typename:GtkWidget *
PhasorType	ServerFunction.c	/^int UDP_sockfd, TCP_sockfd, TCP_sin_size,  PhasorType[50];$/;"	v	typeref:typename:int[50]
PhasorType	ServerFunction.c	/^int fsecNum = 0, PhasorType[50];$/;"	v	typeref:typename:int[50]
Pmu_Help	PmuGui.c	/^void Pmu_Help (GtkWidget *but, gpointer udata)$/;"	f	typeref:typename:void
Pmu_Simulator	ShearedMemoryStructure.h	/^	GtkWidget *Pmu_Simulator;  $/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
SEND_DATA	ServerFunction.c	/^void* SEND_DATA()$/;"	f	typeref:typename:void *
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGUSR1_handler	ServerFunction.c	/^void  SIGUSR1_handler(int sig)$/;"	f	typeref:typename:void
SIGUSR2_handler	ServerFunction.c	/^void  SIGUSR2_handler(int sig)$/;"	f	typeref:typename:void
SOURCES	Makefile	/^SOURCES = \\$/;"	m
STAT_change	ServerFunction.h	/^	int  STAT_change; \/\/0-no change, 1-changed$/;"	m	struct:PDC_Details	typeref:typename:int
Set_data_source	PmuGui.c	/^void Set_data_source(GtkRadioButton *radiobutton, gpointer udata)$/;"	f	typeref:typename:void
ShmPTR	ShearedMemoryStructure.h	/^}p1, *ShmPTR;$/;"	v	typeref:struct:P_id *
TB	CfgFunction.c	/^const long int TB = 16777215;  \/\/ roundf(powf(2,24) - 1);$/;"	v	typeref:typename:const long int
TCP_CONNECTIONS	ServerFunction.c	/^void* TCP_CONNECTIONS(void * temp_pdc)$/;"	f	typeref:typename:void *
TCP_PMU	ServerFunction.c	/^void* TCP_PMU()$/;"	f	typeref:typename:void *
TCP_addr	ServerFunction.h	/^struct sockaddr_in UDP_addr,TCP_addr; \/* connector’s address information *\/$/;"	v	typeref:struct:sockaddr_in
TCP_my_addr	ServerFunction.h	/^struct sockaddr_in UDP_my_addr,TCP_my_addr; \/* my address information *\/$/;"	v	typeref:struct:sockaddr_in
TCP_sin_size	ServerFunction.c	/^int UDP_sockfd, TCP_sockfd, TCP_sin_size,  PhasorType[50];$/;"	v	typeref:typename:int
TCP_sin_size	ServerFunction.h	/^int TCP_sin_size, numbytes;$/;"	v	typeref:typename:int
TCP_sockfd	ServerFunction.c	/^int UDP_sockfd, TCP_sockfd, TCP_sin_size,  PhasorType[50];$/;"	v	typeref:typename:int
TCP_sockfd	ServerFunction.h	/^int UDP_sockfd,TCP_sockfd,MUL_sockfd; \/* socket descriptors *\/$/;"	v	typeref:typename:int
TCP_thread	ServerFunction.h	/^pthread_t UDP_thread,TCP_thread,MUL_thread,DATA_thread;$/;"	v	typeref:typename:pthread_t
TcpPort	ShearedMemoryStructure.h	/^	int TcpPort;			\/* User given TCP port number for server *\/$/;"	m	struct:P_id	typeref:typename:int
UDP_PMU	ServerFunction.c	/^void* UDP_PMU()$/;"	f	typeref:typename:void *
UDP_addr	ServerFunction.h	/^struct sockaddr_in UDP_addr,TCP_addr; \/* connector’s address information *\/$/;"	v	typeref:struct:sockaddr_in
UDP_addr_len	ServerFunction.c	/^socklen_t UDP_addr_len;$/;"	v	typeref:typename:socklen_t
UDP_addr_len	ServerFunction.h	/^socklen_t UDP_addr_len;$/;"	v	typeref:typename:socklen_t
UDP_my_addr	ServerFunction.h	/^struct sockaddr_in UDP_my_addr,TCP_my_addr; \/* my address information *\/$/;"	v	typeref:struct:sockaddr_in
UDP_sockfd	ServerFunction.c	/^int UDP_sockfd, TCP_sockfd, TCP_sin_size,  PhasorType[50];$/;"	v	typeref:typename:int
UDP_sockfd	ServerFunction.h	/^int UDP_sockfd,TCP_sockfd,MUL_sockfd; \/* socket descriptors *\/$/;"	v	typeref:typename:int
UDP_thread	ServerFunction.h	/^pthread_t UDP_thread,TCP_thread,MUL_thread,DATA_thread;$/;"	v	typeref:typename:pthread_t
UdpPort	ShearedMemoryStructure.h	/^	int UdpPort;			\/* User given UDP port number for server *\/$/;"	m	struct:P_id	typeref:typename:int
__SUPPORT_H__	PmuGui.h	/^#define __SUPPORT_H__$/;"	d
__anon2d03f9320103	PmuGui.h	/^{$/;"	g
_pmuStruct	ShearedMemoryStructure.h	/^struct _pmuStruct$/;"	s
about_dialog	PmuGui.h	/^GtkWidget *about_dialog;$/;"	v	typeref:typename:GtkWidget *
about_menuitem	ShearedMemoryStructure.h	/^	GtkWidget *about_menuitem;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
about_pmu	PmuGui.c	/^void about_pmu (GtkButton *widget, gpointer udata)$/;"	f	typeref:typename:void
add_remove_choice	CfgFunction.h	/^	int  add_remove_choice; $/;"	m	struct:ConfigurationChange	typeref:typename:int
address_set	ServerFunction.h	/^	int  address_set;$/;"	m	struct:PDC_Details	typeref:typename:int
admin_label	ShearedMemoryStructure.h	/^	GtkWidget *admin_label;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
af	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
angtext	CfgGuiFunctions.h	/^GtkWidget *phtext, *angtext, *HdrFrm;$/;"	v	typeref:typename:GtkWidget **
annmr	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
anunit	CfgFunction.c	/^long int phunit = 915527, anunit = 1, digunit = 0;$/;"	v	typeref:typename:long int
anunit_final_val	CfgFunction.h	/^unsigned char anunit_final_val[500];$/;"	v	typeref:typename:unsigned char[500]
apply_pmu_setup	PmuGui.c	/^void apply_pmu_setup (GtkWidget *w, gpointer udata)$/;"	f	typeref:typename:void
buffercount	CfgFunction.c	/^int buffercount=0;$/;"	v	typeref:typename:int
bufferlength	CfgFunction.c	/^int bufferlength=50000;       \/\/Can be changed during runtime.Buffer will be reset if length c/;"	v	typeref:typename:int
byte_by_byte_copy	function.c	/^void byte_by_byte_copy(unsigned char dst[],unsigned char src[],int index,int n) {$/;"	f	typeref:typename:void
c2i	function.c	/^int c2i (unsigned char temp[])$/;"	f	typeref:typename:int
c2li	function.c	/^long int c2li (unsigned char temp_3[])$/;"	f	typeref:typename:long int
cfg2_frm	CfgFunction.c	/^unsigned char cfg2_frm[MAX_STRING_SIZE];$/;"	v	typeref:typename:unsigned char[]
cfg2_frm_size	CfgFunction.c	/^int cfg2_frm_size, data_frm_size = 18, data_rate, cfgcnt = 0;  		$/;"	v	typeref:typename:int
cfgPath	ShearedMemoryStructure.h	/^	char cfgPath[200];       	\/* Its a PMU Setup File path given by use *\/$/;"	m	struct:P_id	typeref:typename:char[200]
cfg_STAT_change	CfgGuiFunctions.c	/^void cfg_STAT_change (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
cfg_STNname	CfgFunction.h	/^	char *cfg_STNname; $/;"	m	struct:ConfigurationFrame	typeref:typename:char *
cfg_af	CfgFunction.h	/^	int  cfg_af; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_analog_channels	CfgFunction.h	/^	char *cfg_analog_channels; $/;"	m	struct:ConfigurationFrame	typeref:typename:char *
cfg_annmr_val	CfgFunction.h	/^	int  cfg_annmr_val; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_bit_change_info	ShearedMemoryStructure.h	/^	int cfg_bit_change_info;	\/* STAT Word change bit status if any otherwise default set to 0 *\/$/;"	m	struct:P_id	typeref:typename:int
cfg_crc_error	ServerFunction.h	/^int dataFileVar, cfg_crc_error; $/;"	v	typeref:typename:int
cfg_create_call	CfgGuiFunctions.c	/^void cfg_create_call()$/;"	f	typeref:typename:void
cfg_create_function	CfgGuiFunctions.c	/^void cfg_create_function (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
cfg_dataRate	CfgFunction.h	/^	int  cfg_dataRate; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_dgnmr_val	CfgFunction.h	/^	int  cfg_dgnmr_val; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_digital_channels	CfgFunction.h	/^	char *cfg_digital_channels; $/;"	m	struct:ConfigurationFrame	typeref:typename:char *
cfg_fdf	CfgFunction.h	/^	int  cfg_fdf; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_fnom	CfgFunction.h	/^	int  cfg_fnom; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_info	CfgFunction.h	/^struct ConfigurationFrame *cfg_info;$/;"	v	typeref:struct:ConfigurationFrame *
cfg_modification_button	ShearedMemoryStructure.h	/^	GtkWidget *cfg_modification_button;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
cfg_name	CfgGuiFunctions.h	/^GtkWidget *cfg_name;$/;"	v	typeref:typename:GtkWidget *
cfg_pf	CfgFunction.h	/^	int  cfg_pf; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_phasor_channels	CfgFunction.h	/^	char *cfg_phasor_channels; $/;"	m	struct:ConfigurationFrame	typeref:typename:char *
cfg_phnmr_val	CfgFunction.h	/^	int  cfg_phnmr_val; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_pmuID	CfgFunction.h	/^	int  cfg_pmuID; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_pn	CfgFunction.h	/^	int  cfg_pn; $/;"	m	struct:ConfigurationFrame	typeref:typename:int
cfg_setup_window	CfgGuiFunctions.h	/^GtkWidget *cfg_setup_window;$/;"	v	typeref:typename:GtkWidget *
cfg_size	ServerFunction.c	/^int df_data_frm_size = 0, old_data_rate = 0, cfg_size, hdr_size=0;$/;"	v	typeref:typename:int
cfgcnt	CfgFunction.c	/^int cfg2_frm_size, data_frm_size = 18, data_rate, cfgcnt = 0;  		$/;"	v	typeref:typename:int
change_data_rate_option	CfgGuiFunctions.c	/^void change_data_rate_option()$/;"	f	typeref:typename:void
channel_name	function.c	/^#define channel_name /;"	d	file:
channel_names_for_analog	CfgGuiFunctions.c	/^void channel_names_for_analog ()$/;"	f	typeref:typename:void
channel_names_for_digital	CfgGuiFunctions.c	/^void channel_names_for_digital ()$/;"	f	typeref:typename:void
channel_names_for_phasor	CfgGuiFunctions.c	/^void channel_names_for_phasor ()$/;"	f	typeref:typename:void
checkbox_function	CfgGuiFunctions.c	/^void checkbox_function(GtkWidget *widget, gpointer data)$/;"	f	typeref:typename:void
checkip	PmuGui.c	/^int checkip(char ip[])$/;"	f	typeref:typename:int
chk	CfgFunction.c	/^uint16_t chk;$/;"	v	typeref:typename:uint16_t
chkBtn1	CfgGuiFunctions.h	/^GtkWidget *chkBtn1, *chkBtn2;$/;"	v	typeref:typename:GtkWidget *
chkBtn2	CfgGuiFunctions.h	/^GtkWidget *chkBtn1, *chkBtn2;$/;"	v	typeref:typename:GtkWidget **
clean	Makefile	/^clean:$/;"	t
cline	ServerFunction.h	/^unsigned char cline[MAX_STRING_SIZE];$/;"	v	typeref:typename:unsigned char[]
cmd_received	ServerFunction.h	/^	int  cmd_received;  \/\/\/\/0 maens Not-received, 1 maeans received$/;"	m	struct:PDC_Details	typeref:typename:int
compute_CRC	function.c	/^uint16_t compute_CRC(unsigned char *message,int length)$/;"	f	typeref:typename:uint16_t
copy_cbyc	function.c	/^void copy_cbyc(unsigned char dst[],unsigned char *s,int size) {$/;"	f	typeref:typename:void
count	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
create_cfg	CfgFunction.c	/^int create_cfg()$/;"	f	typeref:typename:int
create_cfg_button	ShearedMemoryStructure.h	/^	GtkWidget *create_cfg_button;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
create_pixbuf	PmuGui.c	/^GdkPixbuf *create_pixbuf(const gchar * filename)$/;"	f	typeref:typename:GdkPixbuf *
create_pmu_model	PmuGui.c	/^GtkTreeModel* create_pmu_model (FILE *fp1)$/;"	f	typeref:typename:GtkTreeModel *
create_pmu_view	PmuGui.c	/^GtkWidget* create_pmu_view (FILE *fp1)$/;"	f	typeref:typename:GtkWidget *
curnt_soc	ServerFunction.c	/^long int df_soc, fsec = 0, curnt_soc = 0, prev_soc = 0,soc1,soc2;$/;"	v	typeref:typename:long int
current	CfgFunction.c	/^struct node *current = NULL;$/;"	v	typeref:struct:node *
data	CfgFunction.c	/^   char *data;$/;"	m	struct:node	typeref:typename:char *	file:
data	DataDir/PMUfiles_4machine_case1a/updateFile.m	/^    data = csvread(input1);$/;"	v
data	DataDir/PMUfiles_4machine_case1b/updateFile.m	/^    data = csvread(input1);$/;"	v
data	DataDir/PMUfiles_4machine_case1c/updateFile.m	/^    data = csvread(input1);$/;"	v
data	DataDir/PMUfiles_4machine_case2a/updateFile.m	/^    data = csvread(input1);$/;"	v
data	DataDir/PMUfiles_4machine_case2b/updateFile.m	/^    data = csvread(input1);$/;"	v
data	DataDir/PMUfiles_4machine_case2c/updateFile.m	/^    data = csvread(input1);$/;"	v
data1	DataDir/PMUfiles_4machine_case1a/updateFile.m	/^    data1 = data(:,2:7);$/;"	v
data1	DataDir/PMUfiles_4machine_case1b/updateFile.m	/^    data1 = data(:,2:7);$/;"	v
data1	DataDir/PMUfiles_4machine_case1c/updateFile.m	/^    data1 = data(:,2:7);$/;"	v
data1	DataDir/PMUfiles_4machine_case2a/updateFile.m	/^    data1 = data(:,2:7);$/;"	v
data1	DataDir/PMUfiles_4machine_case2b/updateFile.m	/^    data1 = data(:,2:7);$/;"	v
data1	DataDir/PMUfiles_4machine_case2c/updateFile.m	/^    data1 = data(:,2:7);$/;"	v
data2	DataDir/PMUfiles_4machine_case1a/updateFile.m	/^    data2 = [data(:,1:end-2), repmat(data1,1,feeders), data(:,end-1:end)];$/;"	v
data2	DataDir/PMUfiles_4machine_case1b/updateFile.m	/^    data2 = [data(:,1:end-2), repmat(data1,1,feeders), data(:,end-1:end)];$/;"	v
data2	DataDir/PMUfiles_4machine_case1c/updateFile.m	/^    data2 = [data(:,1:end-2), repmat(data1,1,feeders), data(:,end-1:end)];$/;"	v
data2	DataDir/PMUfiles_4machine_case2a/updateFile.m	/^    data2 = [data(:,1:end-2), repmat(data1,1,feeders), data(:,end-1:end)];$/;"	v
data2	DataDir/PMUfiles_4machine_case2b/updateFile.m	/^    data2 = [data(:,1:end-2), repmat(data1,1,feeders), data(:,end-1:end)];$/;"	v
data2	DataDir/PMUfiles_4machine_case2c/updateFile.m	/^    data2 = [data(:,1:end-2), repmat(data1,1,feeders), data(:,end-1:end)];$/;"	v
dataFileVar	ServerFunction.h	/^int dataFileVar, cfg_crc_error; $/;"	v	typeref:typename:int
dataFileVar	ShearedMemoryStructure.h	/^	int dataFileVar;		\/* For data source options : 0-Auto & 1-File Measurements *\/$/;"	m	struct:P_id	typeref:typename:int
data_frm	ServerFunction.h	/^unsigned char data_frm[MAX_STRING_SIZE], df_temp[2], df_temp_1[4];$/;"	v	typeref:typename:unsigned char[]
data_frm_size	CfgFunction.c	/^int cfg2_frm_size, data_frm_size = 18, data_rate, cfgcnt = 0;  		$/;"	v	typeref:typename:int
data_managing_window	PmuGui.h	/^GtkWidget *data_managing_window;$/;"	v	typeref:typename:GtkWidget *
data_rate	CfgFunction.c	/^int cfg2_frm_size, data_frm_size = 18, data_rate, cfgcnt = 0;  		$/;"	v	typeref:typename:int
data_rate_choice	CfgFunction.h	/^	int  data_rate_choice; $/;"	m	struct:ConfigurationChange	typeref:typename:int
data_transmission	ServerFunction.h	/^	int  data_transmission;  \/\/0 maens ON, 1 maeans OFF$/;"	m	struct:PDC_Details	typeref:typename:int
delete_all	CfgFunction.c	/^void delete_all()$/;"	f	typeref:typename:void
delete_one	CfgFunction.c	/^void delete_one() $/;"	f	typeref:typename:void
destroy	PmuGui.c	/^void destroy (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
df_af	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_annmr	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_chk	ServerFunction.h	/^uint16_t df_chk;$/;"	v	typeref:typename:uint16_t
df_data_frm_size	ServerFunction.c	/^int df_data_frm_size = 0, old_data_rate = 0, cfg_size, hdr_size=0;$/;"	v	typeref:typename:int
df_data_rate	ServerFunction.c	/^int df_data_rate = 0;$/;"	v	typeref:typename:int
df_dgnmr	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_fdf	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_fnom	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
df_pf	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_phnmr	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_pmu_id	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_pn	ServerFunction.c	/^int df_pmu_id, df_fdf, df_af, df_pf, df_pn, df_phnmr, df_annmr, df_dgnmr;$/;"	v	typeref:typename:int
df_soc	ServerFunction.c	/^long int df_soc, fsec = 0, curnt_soc = 0, prev_soc = 0,soc1,soc2;$/;"	v	typeref:typename:long int
df_temp	ServerFunction.h	/^unsigned char data_frm[MAX_STRING_SIZE], df_temp[2], df_temp_1[4];$/;"	v	typeref:typename:unsigned char[][2]
df_temp_1	ServerFunction.h	/^unsigned char data_frm[MAX_STRING_SIZE], df_temp[2], df_temp_1[4];$/;"	v	typeref:typename:unsigned char[][2][4]
dgnmr	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
digunit	CfgFunction.c	/^long int phunit = 915527, anunit = 1, digunit = 0;$/;"	v	typeref:typename:long int
display_time	PmuGui.c	/^void* display_time()$/;"	f	typeref:typename:void *
end_sample	CfgFunction.c	/^float end_sample;$/;"	v	typeref:typename:float
end_time	CfgFunction.c	/^char start_time[50],end_time[50]; \/\/Put proper values later 50 ?$/;"	v	typeref:typename:char[50][50]
enter_new_data_rate	CfgGuiFunctions.c	/^void enter_new_data_rate(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
err	ServerFunction.c	/^int err, errno, udp_data_trans_off = 1, tcp_data_trans_off = 1, stat_flag = 0;$/;"	v	typeref:typename:int
errno	ServerFunction.c	/^int err, errno, udp_data_trans_off = 1, tcp_data_trans_off = 1, stat_flag = 0;$/;"	v	typeref:typename:int
exit_menuitem	ShearedMemoryStructure.h	/^	GtkWidget *exit_menuitem;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
f	CfgFunction.c	/^int f;$/;"	v	typeref:typename:int
f2c	function.c	/^void f2c (float f, unsigned char temp_1[])$/;"	f	typeref:typename:void
fdf	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
feeders	DataDir/PMUfiles_4machine_case1a/updateFile.m	/^    feeders = round((size(data,2)-9)\/6);$/;"	v
feeders	DataDir/PMUfiles_4machine_case1b/updateFile.m	/^    feeders = round((size(data,2)-9)\/6);$/;"	v
feeders	DataDir/PMUfiles_4machine_case1c/updateFile.m	/^    feeders = round((size(data,2)-9)\/6);$/;"	v
feeders	DataDir/PMUfiles_4machine_case2a/updateFile.m	/^    feeders = round((size(data,2)-9)\/6);$/;"	v
feeders	DataDir/PMUfiles_4machine_case2b/updateFile.m	/^    feeders = round((size(data,2)-9)\/6);$/;"	v
feeders	DataDir/PMUfiles_4machine_case2c/updateFile.m	/^    feeders = round((size(data,2)-9)\/6);$/;"	v
filePath	ShearedMemoryStructure.h	/^	char filePath[400];		\/* File path of user selected measurement file *\/$/;"	m	struct:P_id	typeref:typename:char[400]
file_ok_sel	PmuGui.c	/^void file_ok_sel(GtkWidget *w, GtkFileChooser *fs)$/;"	f	typeref:typename:void
final_cfg_create	CfgGuiFunctions.c	/^void final_cfg_create ()$/;"	f	typeref:typename:void
final_cfg_update_call	CfgGuiFunctions.c	/^int final_cfg_update_call (GtkButton *but, gpointer udata)$/;"	f	typeref:typename:int
fp	CfgFunction.c	/^FILE *fp;$/;"	v	typeref:typename:FILE *
fp_DataFile	ServerFunction.h	/^FILE *fp_DataFile;$/;"	v	typeref:typename:FILE *
fptr	PmuGui.h	/^char fptr[200];$/;"	v	typeref:typename:char[200]
fracsec	CfgFunction.c	/^long int soc, fracsec = 0;$/;"	v	typeref:typename:long int
frame_size	ServerFunction.c	/^void frame_size()$/;"	f	typeref:typename:void
frmt	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
fsec	ServerFunction.c	/^long int df_soc, fsec = 0, curnt_soc = 0, prev_soc = 0,soc1,soc2;$/;"	v	typeref:typename:long int
fsecNum	ServerFunction.c	/^int fsecNum = 0, PhasorType[50];$/;"	v	typeref:typename:int
generate_data_frame	ServerFunction.c	/^void generate_data_frame()$/;"	f	typeref:typename:void
get_header_frame	ServerFunction.c	/^int get_header_frame()$/;"	f	typeref:typename:int
global_data_frm_size	CfgFunction.c	/^int i, j, n, pmu_id, indx = 0, global_data_frm_size=0, hdrFrmSize=0;$/;"	v	typeref:typename:int
hdrFrmSize	CfgFunction.c	/^int i, j, n, pmu_id, indx = 0, global_data_frm_size=0, hdrFrmSize=0;$/;"	v	typeref:typename:int
hdr_create_function	CfgGuiFunctions.c	/^void hdr_create_function (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
hdr_frame	CfgFunction.h	/^char *hdr_frame, *markup1, PMU_mulip[20];$/;"	v	typeref:typename:char *
hdr_frame_window	CfgGuiFunctions.h	/^GtkWidget *hdr_frame_window;$/;"	v	typeref:typename:GtkWidget *
hdr_size	ServerFunction.c	/^int df_data_frm_size = 0, old_data_rate = 0, cfg_size, hdr_size=0;$/;"	v	typeref:typename:int
hdrline	ServerFunction.h	/^unsigned char hdrline[MAX_STRING_SIZE];$/;"	v	typeref:typename:unsigned char[]
head	CfgFunction.c	/^struct node *head = NULL;$/;"	v	typeref:struct:node *
header	CfgFunction.c	/^unsigned char header[MAX_STRING_SIZE];$/;"	v	typeref:typename:unsigned char[]
header_frm_button	ShearedMemoryStructure.h	/^	GtkWidget *header_frm_button;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
header_frm_gen	CfgFunction.c	/^void header_frm_gen(int len)$/;"	f	typeref:typename:void
help_dialog	PmuGui.h	/^GtkWidget *help_dialog;$/;"	v	typeref:typename:GtkWidget *
i	CfgFunction.c	/^int i, j, n, pmu_id, indx = 0, global_data_frm_size=0, hdrFrmSize=0;$/;"	v	typeref:typename:int
i2c	function.c	/^void i2c (int t, unsigned char temp[])$/;"	f	typeref:typename:void
includedir	Makefile	/^includedir = \/usr\/src\/include$/;"	m
indx	CfgFunction.c	/^int i, j, n, pmu_id, indx = 0, global_data_frm_size=0, hdrFrmSize=0;$/;"	v	typeref:typename:int
insert_element	CfgFunction.c	/^void insert_element(char dat[]) $/;"	f	typeref:typename:void
install	Makefile	/^install: $(PROGRAM)$/;"	t
int_to_ascii_convertor	function.c	/^void int_to_ascii_convertor(unsigned int n,unsigned char hex[]) {$/;"	f	typeref:typename:void
ip	ServerFunction.h	/^	char ip[16];$/;"	m	struct:PDC_Details	typeref:typename:char[16]
isNthBitSet	function.c	/^int isNthBitSet (unsigned char c, int n) {$/;"	f	typeref:typename:int
isNumber	PmuGui.c	/^int isNumber(char *s)$/;"	f	typeref:typename:int
is_empty	CfgFunction.c	/^bool is_empty() $/;"	f	typeref:typename:bool
j	CfgFunction.c	/^int i, j, n, pmu_id, indx = 0, global_data_frm_size=0, hdrFrmSize=0;$/;"	v	typeref:typename:int
li2c	function.c	/^void li2c (long int t1, unsigned char temp_1[])$/;"	f	typeref:typename:void
lines	CfgFunction.c	/^int lines;$/;"	v	typeref:typename:int
long_int_to_ascii_convertor	function.c	/^void long_int_to_ascii_convertor(unsigned long int n,unsigned char hex[]) {$/;"	f	typeref:typename:void
main	pmu.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
make_config	CfgFunction.c	/^void make_config()$/;"	f	typeref:typename:void
manage_data_source	ShearedMemoryStructure.h	/^	GtkWidget *manage_data_source;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
manage_data_sources	PmuGui.c	/^void manage_data_sources()$/;"	f	typeref:typename:void
markup	PmuGui.h	/^char *markup;$/;"	v	typeref:typename:char *
markup1	CfgFunction.h	/^char *hdr_frame, *markup1, PMU_mulip[20];$/;"	v	typeref:typename:char **
max_data_rate	CfgFunction.c	/^#define max_data_rate /;"	d	file:
measurement_Return	function.c	/^char* measurement_Return ()$/;"	f	typeref:typename:char *
menu_cfg_modify	ShearedMemoryStructure.h	/^	GtkWidget * menu_cfg_modify;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
menu_data_source	ShearedMemoryStructure.h	/^	GtkWidget * menu_data_source;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
menu_header_frm	ShearedMemoryStructure.h	/^	GtkWidget * menu_header_frm;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
menu_setup_cfg	ShearedMemoryStructure.h	/^	GtkWidget * menu_setup_cfg;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
menu_stat_modify	ShearedMemoryStructure.h	/^	GtkWidget * menu_stat_modify;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
menuitem2	ShearedMemoryStructure.h	/^	GtkWidget * menuitem2;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
mul_ip	PmuGui.h	/^GtkWidget *p_id, *p_udp, *p_tcp, *p_ip, *mul_ip;$/;"	v	typeref:typename:GtkWidget *****
mul_ip	ServerFunction.c	/^char mul_ip[20];$/;"	v	typeref:typename:char[20]
mul_pdc	ServerFunction.h	/^}*PDCfirst,*PDClast,*mul_pdc;$/;"	v	typeref:struct:PDC_Details ***
mul_port	PmuGui.h	/^GtkWidget *udp_port, *tcp_port, *mul_port;$/;"	v	typeref:typename:GtkWidget ***
mul_port	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
mutex_pdc_object	ServerFunction.c	/^pthread_mutex_t mutex_pdc_object = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t
n	CfgFunction.c	/^int i, j, n, pmu_id, indx = 0, global_data_frm_size=0, hdrFrmSize=0;$/;"	v	typeref:typename:int
ncmp_cbyc	function.c	/^int ncmp_cbyc(unsigned char dst[],unsigned char src[],int size) {$/;"	f	typeref:typename:int
new_cfg_analog_channels	CfgFunction.h	/^	char *new_cfg_analog_channels; $/;"	m	struct:ConfigurationChange	typeref:typename:char *
new_cfg_annmr_val	CfgFunction.h	/^	int  new_cfg_annmr_val; $/;"	m	struct:ConfigurationChange	typeref:typename:int
new_cfg_info	CfgFunction.h	/^struct ConfigurationChange *new_cfg_info;$/;"	v	typeref:struct:ConfigurationChange *
new_cfg_phasor_channels	CfgFunction.h	/^	char *new_cfg_phasor_channels; $/;"	m	struct:ConfigurationChange	typeref:typename:char *
new_cfg_phnmr_val	CfgFunction.h	/^	int  new_cfg_phnmr_val; $/;"	m	struct:ConfigurationChange	typeref:typename:int
new_channel_names_for_analog	CfgGuiFunctions.c	/^void new_channel_names_for_analog ()$/;"	f	typeref:typename:void
new_channel_names_for_phasor	CfgGuiFunctions.c	/^void new_channel_names_for_phasor ()$/;"	f	typeref:typename:void
new_data_rate	CfgFunction.h	/^	int  new_data_rate; $/;"	m	struct:ConfigurationChange	typeref:typename:int
new_phasor_num	CfgGuiFunctions.c	/^void new_phasor_num(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
new_window	PmuGui.h	/^GtkWidget *new_window;$/;"	v	typeref:typename:GtkWidget *
next	CfgFunction.c	/^   struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	ServerFunction.h	/^	struct PDC_Details *next;$/;"	m	struct:PDC_Details	typeref:struct:PDC_Details *
node	CfgFunction.c	/^struct node $/;"	s	file:
num_combo	CfgGuiFunctions.h	/^GtkWidget *num_combo[50];$/;"	v	typeref:typename:GtkWidget * [50]
num_pmu	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
num_text	CfgGuiFunctions.h	/^GtkWidget *num_text[50], *num_text1[50];$/;"	v	typeref:typename:GtkWidget * [50]
num_text1	CfgGuiFunctions.h	/^GtkWidget *num_text[50], *num_text1[50];$/;"	v	typeref:typename:GtkWidget * [50]* [50]
numbytes	ServerFunction.h	/^int TCP_sin_size, numbytes;$/;"	v	typeref:typename:int
old_data_rate	ServerFunction.c	/^int df_data_frm_size = 0, old_data_rate = 0, cfg_size, hdr_size=0;$/;"	v	typeref:typename:int
open_cfg	ShearedMemoryStructure.h	/^	GtkWidget *open_cfg;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
option	CfgFunction.c	/^int option;$/;"	v	typeref:typename:int
outfile	DataDir/PMUfiles_4machine_case1a/updateFile.m	/^    outfile = [input1(1:end-4), "_withLineVoltage", input1(end-3:end)];$/;"	v
outfile	DataDir/PMUfiles_4machine_case1b/updateFile.m	/^    outfile = [input1(1:end-4), "_withLineVoltage", input1(end-3:end)];$/;"	v
outfile	DataDir/PMUfiles_4machine_case1c/updateFile.m	/^    outfile = [input1(1:end-4), "_withLineVoltage", input1(end-3:end)];$/;"	v
outfile	DataDir/PMUfiles_4machine_case2a/updateFile.m	/^    outfile = [input1(1:end-4), "_withLineVoltage", input1(end-3:end)];$/;"	v
outfile	DataDir/PMUfiles_4machine_case2b/updateFile.m	/^    outfile = [input1(1:end-4), "_withLineVoltage", input1(end-3:end)];$/;"	v
outfile	DataDir/PMUfiles_4machine_case2c/updateFile.m	/^    outfile = [input1(1:end-4), "_withLineVoltage", input1(end-3:end)];$/;"	v
p1	ShearedMemoryStructure.h	/^}p1, *ShmPTR;$/;"	v	typeref:struct:P_id
p_af	CfgGuiFunctions.h	/^GtkWidget *p_af, *p_pf, *p_pn;$/;"	v	typeref:typename:GtkWidget *
p_anNumber	CfgGuiFunctions.h	/^GtkWidget *p_anNumber;$/;"	v	typeref:typename:GtkWidget *
p_dgNumber	CfgGuiFunctions.h	/^GtkWidget *p_dgNumber;$/;"	v	typeref:typename:GtkWidget *
p_drate	CfgGuiFunctions.h	/^GtkWidget *p_drate;$/;"	v	typeref:typename:GtkWidget *
p_ff	CfgGuiFunctions.h	/^GtkWidget *p_stn, *p_id, *p_ff;$/;"	v	typeref:typename:GtkWidget ***
p_frequency	CfgGuiFunctions.h	/^GtkWidget *p_frequency;$/;"	v	typeref:typename:GtkWidget *
p_id	CfgGuiFunctions.h	/^GtkWidget *p_stn, *p_id, *p_ff;$/;"	v	typeref:typename:GtkWidget **
p_id	PmuGui.h	/^GtkWidget *p_id, *p_udp, *p_tcp, *p_ip, *mul_ip;$/;"	v	typeref:typename:GtkWidget *
p_ip	PmuGui.h	/^GtkWidget *p_id, *p_udp, *p_tcp, *p_ip, *mul_ip;$/;"	v	typeref:typename:GtkWidget ****
p_pf	CfgGuiFunctions.h	/^GtkWidget *p_af, *p_pf, *p_pn;$/;"	v	typeref:typename:GtkWidget **
p_phNumber	CfgGuiFunctions.h	/^GtkWidget *p_phNumber;$/;"	v	typeref:typename:GtkWidget *
p_pn	CfgGuiFunctions.h	/^GtkWidget *p_af, *p_pf, *p_pn;$/;"	v	typeref:typename:GtkWidget ***
p_stn	CfgGuiFunctions.h	/^GtkWidget *p_stn, *p_id, *p_ff;$/;"	v	typeref:typename:GtkWidget *
p_tcp	PmuGui.h	/^GtkWidget *p_id, *p_udp, *p_tcp, *p_ip, *mul_ip;$/;"	v	typeref:typename:GtkWidget ***
p_udp	PmuGui.h	/^GtkWidget *p_id, *p_udp, *p_tcp, *p_ip, *mul_ip;$/;"	v	typeref:typename:GtkWidget **
pdc_addr	ServerFunction.h	/^	struct sockaddr_in pdc_addr;$/;"	m	struct:PDC_Details	typeref:struct:sockaddr_in
pf	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
phasor_type	ShearedMemoryStructure.h	/^	int phasor_type[50];		\/* save the phasor type (currently not useful) *\/$/;"	m	struct:P_id	typeref:typename:int[50]
phnmr	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
phtext	CfgGuiFunctions.h	/^GtkWidget *phtext, *angtext, *HdrFrm;$/;"	v	typeref:typename:GtkWidget *
phunit	CfgFunction.c	/^long int phunit = 915527, anunit = 1, digunit = 0;$/;"	v	typeref:typename:long int
phunit_final_val	CfgFunction.h	/^unsigned char phunit_final_val[500];$/;"	v	typeref:typename:unsigned char[500]
pid	ShearedMemoryStructure.h	/^	pid_t pid;               	\/* Single pid *\/$/;"	m	struct:P_id	typeref:typename:pid_t
pidLocal	PmuGui.h	/^pid_t  pidLocal;$/;"	v	typeref:typename:pid_t
pidMain	ShearedMemoryStructure.h	/^    pid_t pidMain;$/;"	m	struct:P_id	typeref:typename:pid_t
pmuFilePath	PmuGui.h	/^char pmuFilePath[200];$/;"	v	typeref:typename:char[200]
pmuFilePath	ServerFunction.h	/^char pmuFilePath[200];$/;"	v	typeref:typename:char[200]
pmuFolderPath	PmuGui.h	/^char pmuFolderPath[200];$/;"	v	typeref:typename:char[200]
pmuFolderPath	ServerFunction.h	/^char pmuFolderPath[200];$/;"	v	typeref:typename:char[200]
pmuStruct	ShearedMemoryStructure.h	/^typedef struct _pmuStruct pmuStruct;$/;"	t	typeref:struct:_pmuStruct
pmu_cfgsent	ServerFunction.h	/^	int  pmu_cfgsent;   \/\/0- not sent, 1- sent$/;"	m	struct:PDC_Details	typeref:typename:int
pmu_colors	PmuGui.c	/^void pmu_colors()$/;"	f	typeref:typename:void
pmu_data	ShearedMemoryStructure.h	/^pmuStruct *pmu_data;$/;"	v	typeref:typename:pmuStruct *
pmu_details_button	ShearedMemoryStructure.h	/^	GtkWidget *pmu_details_button;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
pmu_id	CfgFunction.c	/^int i, j, n, pmu_id, indx = 0, global_data_frm_size=0, hdrFrmSize=0;$/;"	v	typeref:typename:int
pmu_menubar	ShearedMemoryStructure.h	/^	GtkWidget *pmu_menubar;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
pmu_properties	ShearedMemoryStructure.h	/^	GtkWidget *pmu_properties;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
pmu_server	PmuGui.c	/^void pmu_server ()$/;"	f	typeref:typename:void
pmu_server_window	PmuGui.h	/^GtkWidget *pmu_server_window;$/;"	v	typeref:typename:GtkWidget *
pmu_setup_file_selection	PmuGui.c	/^void pmu_setup_file_selection(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
pmu_setup_window	PmuGui.h	/^GtkWidget *pmu_setup_window;$/;"	v	typeref:typename:GtkWidget *
pmuse	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
pn	CfgFunction.c	/^int frmt, fdf, af, pf, pn, phnmr, annmr, dgnmr, num_pmu = 1; $/;"	v	typeref:typename:int
port	ServerFunction.h	/^	int  port;$/;"	m	struct:PDC_Details	typeref:typename:int
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prev	ServerFunction.h	/^	struct PDC_Details *prev;$/;"	m	struct:PDC_Details	typeref:struct:PDC_Details *
prev_soc	ServerFunction.c	/^long int df_soc, fsec = 0, curnt_soc = 0, prev_soc = 0,soc1,soc2;$/;"	v	typeref:typename:long int
print_buffer	CfgFunction.c	/^void print_buffer() $/;"	f	typeref:typename:void
protocol	ServerFunction.h	/^	char protocol[4];$/;"	m	struct:PDC_Details	typeref:typename:char[4]
ps_thrd_id	PmuGui.h	/^long int ps_thrd_id;$/;"	v	typeref:typename:long int
reconfig_cfg_CC	CfgFunction.c	/^void reconfig_cfg_CC()$/;"	f	typeref:typename:void
remove_cfg_window	CfgGuiFunctions.h	/^GtkWidget *remove_cfg_window;$/;"	v	typeref:typename:GtkWidget *
remove_phasor_num	CfgGuiFunctions.c	/^void remove_phasor_num (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
remove_tcp_node	ServerFunction.c	/^void remove_tcp_node(void * node)$/;"	f	typeref:typename:void
rights_lable	ShearedMemoryStructure.h	/^	GtkWidget *rights_lable;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
sa	ServerFunction.h	/^struct sigaction sa;$/;"	v	typeref:struct:sigaction
sancho_main	CfgFunction.c	/^int sancho_main() $/;"	f	typeref:typename:int
sc1	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
sendTCPCFGFrame	ServerFunction.c	/^void sendTCPCFGFrame (struct PDC_Details *single_pdc_node)$/;"	f	typeref:typename:void
send_thrd_id	ServerFunction.c	/^long int send_thrd_id = 0;$/;"	v	typeref:typename:long int
setup_close_button	CfgGuiFunctions.h	/^GtkWidget *setup_close_button;$/;"	v	typeref:typename:GtkWidget *
setup_display_window	PmuGui.h	/^GtkWidget *CCWin, *setup_display_window;	$/;"	v	typeref:typename:GtkWidget **
show_pmu_details	CfgFunction.c	/^void show_pmu_details (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
sigchld_handler	function.c	/^void sigchld_handler(int s)$/;"	f	typeref:typename:void
size_buffer	CfgFunction.c	/^int size_buffer=1000;$/;"	v	typeref:typename:int
soc	CfgFunction.c	/^long int soc, fracsec = 0;$/;"	v	typeref:typename:long int
soc1	ServerFunction.c	/^long int df_soc, fsec = 0, curnt_soc = 0, prev_soc = 0,soc1,soc2;$/;"	v	typeref:typename:long int
soc2	ServerFunction.c	/^long int df_soc, fsec = 0, curnt_soc = 0, prev_soc = 0,soc1,soc2;$/;"	v	typeref:typename:long int
sockfd	ServerFunction.h	/^	int  sockfd;$/;"	m	struct:PDC_Details	typeref:typename:int
srvr_entry	PmuGui.h	/^int srvr_entry;$/;"	v	typeref:typename:int
start_server	ServerFunction.c	/^void start_server()$/;"	f	typeref:typename:void
start_server	ShearedMemoryStructure.h	/^	GtkWidget *start_server;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
start_time	CfgFunction.c	/^char start_time[50],end_time[50]; \/\/Put proper values later 50 ?$/;"	v	typeref:typename:char[50]
stat_chng_options	CfgGuiFunctions.c	/^void stat_chng_options(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
stat_flag	ServerFunction.c	/^int err, errno, udp_data_trans_off = 1, tcp_data_trans_off = 1, stat_flag = 0;$/;"	v	typeref:typename:int
stat_modification_button	ShearedMemoryStructure.h	/^	GtkWidget *stat_modification_button;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
statusMsg	ShearedMemoryStructure.h	/^    char statusMsg[200];$/;"	m	struct:P_id	typeref:typename:char[200]
statusMsgSet	ShearedMemoryStructure.h	/^    int statusMsgSet;$/;"	m	struct:P_id	typeref:typename:int
statusbar	ShearedMemoryStructure.h	/^    GtkWidget *statusbar;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
t1	CfgFunction.c	/^double t1;$/;"	v	typeref:typename:double
tail	CfgFunction.c	/^struct node *tail = NULL;$/;"	v	typeref:struct:node *
tcp_cfg_flag	ServerFunction.c	/^int udp_cfg_flag = 0, tcp_cfg_flag = 0, tcp_data_flag = 0, udp_data_flag = 0;$/;"	v	typeref:typename:int
tcp_data_flag	ServerFunction.c	/^int udp_cfg_flag = 0, tcp_cfg_flag = 0, tcp_data_flag = 0, udp_data_flag = 0;$/;"	v	typeref:typename:int
tcp_data_trans_off	ServerFunction.c	/^int err, errno, udp_data_trans_off = 1, tcp_data_trans_off = 1, stat_flag = 0;$/;"	v	typeref:typename:int
tcp_port	PmuGui.h	/^GtkWidget *udp_port, *tcp_port, *mul_port;$/;"	v	typeref:typename:GtkWidget **
tcp_port	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
tcp_send_dr_data	ServerFunction.c	/^void tcp_send_dr_data(struct PDC_Details *single_pdc_node)$/;"	f	typeref:typename:void
tcpup	ServerFunction.h	/^	int  tcpup;$/;"	m	struct:PDC_Details	typeref:typename:int
temp	CfgFunction.c	/^unsigned char temp[2], temp_1[4], temp_6[16];$/;"	v	typeref:typename:unsigned char[2]
temp_1	CfgFunction.c	/^unsigned char temp[2], temp_1[4], temp_6[16];$/;"	v	typeref:typename:unsigned char[2][4]
temp_5	CfgFunction.c	/^char temp_5[16];$/;"	v	typeref:typename:char[16]
temp_6	CfgFunction.c	/^unsigned char temp[2], temp_1[4], temp_6[16];$/;"	v	typeref:typename:unsigned char[2][4][16]
temp_ANUNIT_val	ServerFunction.h	/^long int temp_PHUNIT_val[50], temp_ANUNIT_val[50];$/;"	v	typeref:typename:long int[50][50]
temp_PHUNIT_val	ServerFunction.h	/^long int temp_PHUNIT_val[50], temp_ANUNIT_val[50];$/;"	v	typeref:typename:long int[50]
temp_analog_type	ServerFunction.h	/^int temp_pahsor_type[50], temp_analog_type[50];$/;"	v	typeref:typename:int[50][50]
temp_pahsor_type	ServerFunction.h	/^int temp_pahsor_type[50], temp_analog_type[50];$/;"	v	typeref:typename:int[50]
text_view	ShearedMemoryStructure.h	/^	GtkWidget *text_view;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
text_view1	ShearedMemoryStructure.h	/^	GtkWidget *text_view1;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
thread_id	ServerFunction.h	/^	pthread_t thread_id;$/;"	m	struct:PDC_Details	typeref:typename:pthread_t
tim	CfgFunction.c	/^struct timeval tim;$/;"	v	typeref:struct:timeval
time_lable	ShearedMemoryStructure.h	/^	GtkWidget *time_lable;$/;"	m	struct:_pmuStruct	typeref:typename:GtkWidget *
tmp_wait	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
to_intconvertor	function.c	/^unsigned int to_intconvertor(unsigned char array[]) {$/;"	f	typeref:typename:unsigned int
to_long_int_convertor	function.c	/^unsigned long int to_long_int_convertor(unsigned char array[]) {$/;"	f	typeref:typename:unsigned long int
to_long_int_convertor1	function.c	/^unsigned int to_long_int_convertor1(unsigned char array[]) {$/;"	f	typeref:typename:unsigned int
udp_cfg_flag	ServerFunction.c	/^int udp_cfg_flag = 0, tcp_cfg_flag = 0, tcp_data_flag = 0, udp_data_flag = 0;$/;"	v	typeref:typename:int
udp_data_flag	ServerFunction.c	/^int udp_cfg_flag = 0, tcp_cfg_flag = 0, tcp_data_flag = 0, udp_data_flag = 0;$/;"	v	typeref:typename:int
udp_data_trans_off	ServerFunction.c	/^int err, errno, udp_data_trans_off = 1, tcp_data_trans_off = 1, stat_flag = 0;$/;"	v	typeref:typename:int
udp_port	PmuGui.h	/^GtkWidget *udp_port, *tcp_port, *mul_port;$/;"	v	typeref:typename:GtkWidget *
udp_port	ServerFunction.c	/^int count = 0, pmuse=0, sc1 = 0, tcp_port, udp_port, mul_port, tmp_wait = 1, df_fnom;$/;"	v	typeref:typename:int
udp_send_dr_data	ServerFunction.c	/^void udp_send_dr_data(struct PDC_Details *temp_pdc)$/;"	f	typeref:typename:void
uninstall	Makefile	/^uninstall:$/;"	t
updateFile	DataDir/PMUfiles_4machine_case1a/updateFile.m	/^function [] = updateFile (input1)$/;"	f
updateFile	DataDir/PMUfiles_4machine_case1b/updateFile.m	/^function [] = updateFile (input1)$/;"	f
updateFile	DataDir/PMUfiles_4machine_case1c/updateFile.m	/^function [] = updateFile (input1)$/;"	f
updateFile	DataDir/PMUfiles_4machine_case2a/updateFile.m	/^function [] = updateFile (input1)$/;"	f
updateFile	DataDir/PMUfiles_4machine_case2b/updateFile.m	/^function [] = updateFile (input1)$/;"	f
updateFile	DataDir/PMUfiles_4machine_case2c/updateFile.m	/^function [] = updateFile (input1)$/;"	f
validate_func	CfgGuiFunctions.c	/^int validate_func(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:int
validation_analog_names	CfgGuiFunctions.c	/^int validation_analog_names(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:int
validation_cfg_create	CfgGuiFunctions.c	/^int validation_cfg_create ()$/;"	f	typeref:typename:int
validation_digital_names	CfgGuiFunctions.c	/^int validation_digital_names(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:int
validation_hdr_frm	CfgGuiFunctions.c	/^void validation_hdr_frm (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:void
validation_new_analog_names	CfgGuiFunctions.c	/^int validation_new_analog_names(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:int
validation_new_data_rate	CfgGuiFunctions.c	/^int validation_new_data_rate (GtkButton *but, gpointer udata)$/;"	f	typeref:typename:int
validation_new_phasor_names	CfgGuiFunctions.c	/^int validation_new_phasor_names()$/;"	f	typeref:typename:int
validation_ph_an_num	CfgGuiFunctions.c	/^int validation_ph_an_num (GtkButton *but, gpointer udata)$/;"	f	typeref:typename:int
validation_phasor_names	CfgGuiFunctions.c	/^int validation_phasor_names(GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:int
validation_pmu_server	PmuGui.c	/^int validation_pmu_server (GtkWidget *button, gpointer udata)$/;"	f	typeref:typename:int
validation_remove_ph_an_num	CfgGuiFunctions.c	/^int validation_remove_ph_an_num (GtkButton *but, gpointer udata)$/;"	f	typeref:typename:int
validation_result	PmuGui.c	/^void validation_result (char *msg)$/;"	f	typeref:typename:void
validation_setup_file_name	CfgGuiFunctions.c	/^int validation_setup_file_name (GtkWidget *widget, gpointer udata)$/;"	f	typeref:typename:int
view_setup_file	PmuGui.c	/^void view_setup_file (GtkWidget *w, GtkFileChooser *fs)$/;"	f	typeref:typename:void
write_data	CfgFunction.c	/^void write_data()$/;"	f	typeref:typename:void
write_data_helper	CfgFunction.c	/^void write_data_helper(char* temp,long int sampleno,FILE* dat_file)$/;"	f	typeref:typename:void
yes	ServerFunction.c	/^int yes = 1; 	\/* argument to setsockopt *\/$/;"	v	typeref:typename:int
